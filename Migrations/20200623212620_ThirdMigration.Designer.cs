// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebAPI.Models;

namespace WebAPI.Migrations
{
    [DbContext(typeof(ShoppingCartContext))]
    [Migration("20200623212620_ThirdMigration")]
    partial class ThirdMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("WebAPI.Models.Cart", b =>
                {
                    b.Property<int>("CartId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Qty")
                        .HasColumnType("int");

                    b.HasKey("CartId");

                    b.HasIndex("ProductId")
                        .IsUnique();

                    b.ToTable("Cart");

                    b.HasData(
                        new
                        {
                            CartId = 1,
                            ProductId = 1,
                            Qty = 1
                        });
                });

            modelBuilder.Entity("WebAPI.Models.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Categories")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoryId");

                    b.ToTable("Category");

                    b.HasData(
                        new
                        {
                            CategoryId = 1,
                            Categories = "Mobile"
                        },
                        new
                        {
                            CategoryId = 2,
                            Categories = "Processor"
                        },
                        new
                        {
                            CategoryId = 3,
                            Categories = "Laptop"
                        });
                });

            modelBuilder.Entity("WebAPI.Models.ShoppingDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("InStock")
                        .HasColumnType("int");

                    b.Property<string>("ItemName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("ShoppingDetails");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            Description = "Solid phone",
                            ImageUrl = "https://cdn.shopify.com/s/files/1/0250/3793/0580/products/1_d539c0ca-7985-4c86-b8db-847074480619_1024x1024@2x.png?v=1558174602",
                            InStock = 5,
                            ItemName = "IPhoneXS",
                            Price = 30,
                            Quantity = 0,
                            Total = 0
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 2,
                            Description = "Solid processor",
                            ImageUrl = "https://cdn.shopify.com/s/files/1/0250/3793/0580/products/1_d539c0ca-7985-4c86-b8db-847074480619_1024x1024@2x.png?v=1558174602",
                            InStock = 5,
                            ItemName = "AMD Ryzen 7 1700",
                            Price = 286,
                            Quantity = 0,
                            Total = 0
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 3,
                            Description = "Solid laptop",
                            ImageUrl = "https://cdn.shopify.com/s/files/1/0250/3793/0580/products/1_d539c0ca-7985-4c86-b8db-847074480619_1024x1024@2x.png?v=1558174602",
                            InStock = 5,
                            ItemName = "ACER Laptop",
                            Price = 286,
                            Quantity = 0,
                            Total = 0
                        });
                });

            modelBuilder.Entity("WebAPI.Models.Cart", b =>
                {
                    b.HasOne("WebAPI.Models.ShoppingDetail", "ShoppingDetail")
                        .WithOne("Carts")
                        .HasForeignKey("WebAPI.Models.Cart", "ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WebAPI.Models.ShoppingDetail", b =>
                {
                    b.HasOne("WebAPI.Models.Category", "Category")
                        .WithMany("ShoppingDetails")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
